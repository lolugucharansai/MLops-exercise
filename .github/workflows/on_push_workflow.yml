name: CI/CD pipeline
on:
  push:
    branches:
      - main
  # workflow_dispatch:
env:
  DEV_AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  PROD_AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
jobs:
  development:
    runs-on: ubuntu-latest
    environment: 
      name: development
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Install az ml extension
      run: az extension add -n ml -y
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ env.DEV_AZURE_CREDENTIALS }}
    - name: Submit a train job
      id: train
      run: |
          job_name="train-dev-$(date +%Y%m%d%H%M%S)"
          echo "JOB_NAME=$job_name" >> $GITHUB_ENV
          az ml job create --file Initial_job/train_dev.yml --name $job_name --resource-group diabetes-dev-rg --workspace-name aml-diabetes-dev --stream
    - name: Save trained model
      run: |
           # Change the current working directory and Download the model from the job's outputs
           mkdir -p ./outputs
           cd ./outputs
           az ml job download --resource-group diabetes-dev-rg --workspace-name aml-diabetes-dev --name $JOB_NAME
           # Move the model to the correct location
           mv ./artifacts/model/model.pkl ./model.pkl
    - name: Upload model as artifact
      uses: actions/upload-artifact@v2
      with:
        name: model
        path: ./outputs/model.pkl
  production:
    needs: development
    runs-on: ubuntu-latest
    environment: 
        name: production
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ env.PROD_AZURE_CREDENTIALS }}
      - name: Retrain model
        id: retrain
        run: |
               echo "Retraining model  "
               job_name="retrain-model-$(date +%Y%m%d%H%M%S)"
               echo "JOB_NAME=$job_name" >> $GITHUB_ENV
               az ml job create --file retrain_model/retrain_model.yml --name $job_name --resource-group diabetes-dev-rg --workspace-name aml-diabetes-dev --stream 
      - name: Register model
        run: |
            model_name="diabetes_model"
            model_path="azureml://jobs/$JOB_NAME/outputs/artifacts/model"
            az ml model create --name $model_name --type "mlflow_model" --path $model_path --resource-group diabetes-dev-rg --workspace-name aml-diabetes-dev
       
      - name: Deploy model to online endpoint
        run: |
            deployment_name="diabetesdeployment1"
            model_name="diabetes_model"
            az ml online-deployment update -n diabetesdeployment1 --endpoint diabetesend -f endpoint/deployment-endpoint.yml --resource-group diabetes-dev-rg --workspace-name aml-diabetes-dev
      
      - name: Update API key on Render
        run: |
          # Retrieve the new API key from Azure
          credentials=$(az ml online-endpoint get-credentials --name diabetesend --resource-group diabetes-dev-rg --workspace-name aml-diabetes-dev)
          new_api_key=$(echo $credentials | jq -r '.primaryKey')
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "Failed to retrieve API key from Azure with exit code $exit_code"
            exit $exit_code
          fi
          # echo "New API Key: $new_api_key"

          # Update API key on Render
          response=$(curl -v -H "Authorization: Bearer ${{ secrets.RENDER_API }}" \
               -X PUT https://api.render.com/v1/services/srv-coodc1uv3ddc738lujgg/env-vars \
               -H "Content-Type: application/json" \
               -d '[
                     {
                       "key": "pass",
                       "value": "'"$new_api_key"'"
                     }
                   ]')
          

         
